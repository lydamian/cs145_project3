
Project3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000638  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000668  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001614  00000000  00000000  000007d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a09  00000000  00000000  00001de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000d0a  00000000  00000000  000027f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000368  00000000  00000000  000034fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000529  00000000  00000000  00003864  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000153d  00000000  00000000  00003d8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000118  00000000  00000000  000052ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ee       	ldi	r30, 0xE4	; 228
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1d 01 	call	0x23a	; 0x23a <main>
  8a:	0c 94 f0 02 	jmp	0x5e0	; 0x5e0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <avr_wait>:
	WDTCR = 15;
}

void
avr_wait(unsigned short msec)
{
  92:	9c 01       	movw	r18, r24
	TCCR0 = 3;
  94:	83 e0       	ldi	r24, 0x03	; 3
  96:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  98:	83 e8       	ldi	r24, 0x83	; 131

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  9a:	08 c0       	rjmp	.+16     	; 0xac <avr_wait+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  9c:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
  9e:	98 b7       	in	r25, 0x38	; 56
  a0:	91 60       	ori	r25, 0x01	; 1
  a2:	98 bf       	out	0x38, r25	; 56
		WDR();
  a4:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
  a6:	08 b6       	in	r0, 0x38	; 56
  a8:	00 fe       	sbrs	r0, 0
  aa:	fd cf       	rjmp	.-6      	; 0xa6 <avr_wait+0x14>

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	31 09       	sbc	r19, r1
  b0:	a8 f7       	brcc	.-22     	; 0x9c <avr_wait+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
  b2:	13 be       	out	0x33, r1	; 51
  b4:	08 95       	ret

000000b6 <avr_wait_u>:
}

void
avr_wait_u(unsigned short msec){
  b6:	9c 01       	movw	r18, r24
	TCCR0 = 3;
  b8:	83 e0       	ldi	r24, 0x03	; 3
  ba:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00001);
  bc:	8e ef       	ldi	r24, 0xFE	; 254
}

void
avr_wait_u(unsigned short msec){
	TCCR0 = 3;
	while (msec--) {
  be:	08 c0       	rjmp	.+16     	; 0xd0 <avr_wait_u+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00001);
  c0:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
  c2:	98 b7       	in	r25, 0x38	; 56
  c4:	91 60       	ori	r25, 0x01	; 1
  c6:	98 bf       	out	0x38, r25	; 56
		WDR();
  c8:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
  ca:	08 b6       	in	r0, 0x38	; 56
  cc:	00 fe       	sbrs	r0, 0
  ce:	fd cf       	rjmp	.-6      	; 0xca <avr_wait_u+0x14>
}

void
avr_wait_u(unsigned short msec){
	TCCR0 = 3;
	while (msec--) {
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	31 09       	sbc	r19, r1
  d4:	a8 f7       	brcc	.-22     	; 0xc0 <avr_wait_u+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
  d6:	13 be       	out	0x33, r1	; 51
  d8:	08 95       	ret

000000da <output>:
}

static void
output(unsigned char d, unsigned char rs)
{
  if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
  da:	66 23       	and	r22, r22
  dc:	11 f0       	breq	.+4      	; 0xe2 <output+0x8>
  de:	c0 9a       	sbi	0x18, 0	; 24
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <output+0xa>
  e2:	c0 98       	cbi	0x18, 0	; 24
  CLR_BIT(PORT, RW_PIN);
  e4:	c1 98       	cbi	0x18, 1	; 24
#define EN_PIN 2

static inline void
set_data(unsigned char x)
{
  PORTD = x;
  e6:	82 bb       	out	0x12, r24	; 18
  DDRD = 0xff;
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	81 bb       	out	0x11, r24	; 17
output(unsigned char d, unsigned char rs)
{
  if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
  CLR_BIT(PORT, RW_PIN);
  set_data(d);
  SET_BIT(PORT, EN_PIN);
  ec:	c2 9a       	sbi	0x18, 2	; 24
}

static inline void
sleep_700ns(void)
{
  NOP();
  ee:	00 00       	nop
  NOP();
  f0:	00 00       	nop
  NOP();
  f2:	00 00       	nop
  if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
  CLR_BIT(PORT, RW_PIN);
  set_data(d);
  SET_BIT(PORT, EN_PIN);
  sleep_700ns();
  CLR_BIT(PORT, EN_PIN);
  f4:	c2 98       	cbi	0x18, 2	; 24
  f6:	08 95       	ret

000000f8 <write>:

static unsigned char
input(unsigned char rs)
{
  unsigned char d;
  if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
  f8:	c0 98       	cbi	0x18, 0	; 24
  SET_BIT(PORT, RW_PIN);
  fa:	c1 9a       	sbi	0x18, 1	; 24
}

static inline unsigned char
get_data(void)
{
  DDRD = 0x00;
  fc:	11 ba       	out	0x11, r1	; 17
  return PIND;
  fe:	90 b3       	in	r25, 0x10	; 16
{
  unsigned char d;
  if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
  SET_BIT(PORT, RW_PIN);
  get_data();
  SET_BIT(PORT, EN_PIN);
 100:	c2 9a       	sbi	0x18, 2	; 24
}

static inline void
sleep_700ns(void)
{
  NOP();
 102:	00 00       	nop
  NOP();
 104:	00 00       	nop
  NOP();
 106:	00 00       	nop
}

static inline unsigned char
get_data(void)
{
  DDRD = 0x00;
 108:	11 ba       	out	0x11, r1	; 17
  return PIND;
 10a:	90 b3       	in	r25, 0x10	; 16
  SET_BIT(PORT, RW_PIN);
  get_data();
  SET_BIT(PORT, EN_PIN);
  sleep_700ns();
  d = get_data();
  CLR_BIT(PORT, EN_PIN);
 10c:	c2 98       	cbi	0x18, 2	; 24
}

static void
write(unsigned char c, unsigned char rs)
{
  while (input(0) & 0x80);
 10e:	99 23       	and	r25, r25
 110:	9c f3       	brlt	.-26     	; 0xf8 <write>
  output(c, rs);
 112:	0e 94 6d 00 	call	0xda	; 0xda <output>
 116:	08 95       	ret

00000118 <lcd_init>:
}

void
lcd_init(void)
{
  SET_BIT(DDR, RS_PIN);
 118:	b8 9a       	sbi	0x17, 0	; 23
  SET_BIT(DDR, RW_PIN);
 11a:	b9 9a       	sbi	0x17, 1	; 23
  SET_BIT(DDR, EN_PIN);
 11c:	ba 9a       	sbi	0x17, 2	; 23
  avr_wait(16);
 11e:	80 e1       	ldi	r24, 0x10	; 16
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
  output(0x30, 0);
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	80 e3       	ldi	r24, 0x30	; 48
 12a:	0e 94 6d 00 	call	0xda	; 0xda <output>
  avr_wait(5);
 12e:	85 e0       	ldi	r24, 0x05	; 5
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
  output(0x30, 0);
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	80 e3       	ldi	r24, 0x30	; 48
 13a:	0e 94 6d 00 	call	0xda	; 0xda <output>
  avr_wait(1);
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	0e 94 49 00 	call	0x92	; 0x92 <avr_wait>
  write(0x3c, 0);
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	8c e3       	ldi	r24, 0x3C	; 60
 14a:	0e 94 7c 00 	call	0xf8	; 0xf8 <write>
  write(0x0c, 0);
 14e:	60 e0       	ldi	r22, 0x00	; 0
 150:	8c e0       	ldi	r24, 0x0C	; 12
 152:	0e 94 7c 00 	call	0xf8	; 0xf8 <write>
  write(0x06, 0);
 156:	60 e0       	ldi	r22, 0x00	; 0
 158:	86 e0       	ldi	r24, 0x06	; 6
 15a:	0e 94 7c 00 	call	0xf8	; 0xf8 <write>
  write(0x01, 0);
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	0e 94 7c 00 	call	0xf8	; 0xf8 <write>
 166:	08 95       	ret

00000168 <lcd_clr>:
}

void
lcd_clr(void)
{
  write(0x01, 0);
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	0e 94 7c 00 	call	0xf8	; 0xf8 <write>
 170:	08 95       	ret

00000172 <setup>:
		avr_wait_u(TL);
	}
	//return;
}

void play_song(){
 172:	d0 9a       	sbi	0x1a, 0	; 26
 174:	d8 98       	cbi	0x1b, 0	; 27
 176:	0e 94 8c 00 	call	0x118	; 0x118 <lcd_init>
 17a:	0e 94 b4 00 	call	0x168	; 0x168 <lcd_clr>
 17e:	d0 9a       	sbi	0x1a, 0	; 26
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	08 95       	ret

00000186 <play_note>:
 186:	8f 92       	push	r8
 188:	9f 92       	push	r9
 18a:	af 92       	push	r10
 18c:	bf 92       	push	r11
 18e:	cf 92       	push	r12
 190:	df 92       	push	r13
 192:	ef 92       	push	r14
 194:	ff 92       	push	r15
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	6b 01       	movw	r12, r22
 1a0:	7c 01       	movw	r14, r24
 1a2:	07 2e       	mov	r0, r23
 1a4:	00 0c       	add	r0, r0
 1a6:	88 0b       	sbc	r24, r24
 1a8:	99 0b       	sbc	r25, r25
 1aa:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__floatsisf>
 1ae:	9b 01       	movw	r18, r22
 1b0:	ac 01       	movw	r20, r24
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	80 e8       	ldi	r24, 0x80	; 128
 1b8:	9f e3       	ldi	r25, 0x3F	; 63
 1ba:	0e 94 4d 01 	call	0x29a	; 0x29a <__divsf3>
 1be:	4b 01       	movw	r8, r22
 1c0:	5c 01       	movw	r10, r24
 1c2:	b7 01       	movw	r22, r14
 1c4:	ff 0c       	add	r15, r15
 1c6:	88 0b       	sbc	r24, r24
 1c8:	99 0b       	sbc	r25, r25
 1ca:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__floatsisf>
 1ce:	a5 01       	movw	r20, r10
 1d0:	94 01       	movw	r18, r8
 1d2:	0e 94 4d 01 	call	0x29a	; 0x29a <__divsf3>
 1d6:	0e 94 bf 01 	call	0x37e	; 0x37e <__fixsfsi>
 1da:	7b 01       	movw	r14, r22
 1dc:	20 e0       	ldi	r18, 0x00	; 0
 1de:	30 e0       	ldi	r19, 0x00	; 0
 1e0:	40 e0       	ldi	r20, 0x00	; 0
 1e2:	5f e3       	ldi	r21, 0x3F	; 63
 1e4:	c5 01       	movw	r24, r10
 1e6:	b4 01       	movw	r22, r8
 1e8:	0e 94 83 02 	call	0x506	; 0x506 <__mulsf3>
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e5       	ldi	r19, 0x50	; 80
 1f0:	43 ec       	ldi	r20, 0xC3	; 195
 1f2:	57 e4       	ldi	r21, 0x47	; 71
 1f4:	0e 94 83 02 	call	0x506	; 0x506 <__mulsf3>
 1f8:	0e 94 bf 01 	call	0x37e	; 0x37e <__fixsfsi>
 1fc:	8b 01       	movw	r16, r22
 1fe:	1e 14       	cp	r1, r14
 200:	1f 04       	cpc	r1, r15
 202:	74 f4       	brge	.+28     	; 0x220 <play_note+0x9a>
 204:	c0 e0       	ldi	r28, 0x00	; 0
 206:	d0 e0       	ldi	r29, 0x00	; 0
 208:	d8 9a       	sbi	0x1b, 0	; 27
 20a:	c8 01       	movw	r24, r16
 20c:	0e 94 5b 00 	call	0xb6	; 0xb6 <avr_wait_u>
 210:	d8 98       	cbi	0x1b, 0	; 27
 212:	c8 01       	movw	r24, r16
 214:	0e 94 5b 00 	call	0xb6	; 0xb6 <avr_wait_u>
 218:	21 96       	adiw	r28, 0x01	; 1
 21a:	ec 16       	cp	r14, r28
 21c:	fd 06       	cpc	r15, r29
 21e:	a1 f7       	brne	.-24     	; 0x208 <play_note+0x82>
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	1f 91       	pop	r17
 226:	0f 91       	pop	r16
 228:	ff 90       	pop	r15
 22a:	ef 90       	pop	r14
 22c:	df 90       	pop	r13
 22e:	cf 90       	pop	r12
 230:	bf 90       	pop	r11
 232:	af 90       	pop	r10
 234:	9f 90       	pop	r9
 236:	8f 90       	pop	r8
 238:	08 95       	ret

0000023a <main>:
{
	//local variables
	int k;
	struct note note1, note2, note3, note4;
	note1.freq = 440;
	note1.duration = 150;
 23a:	0f 2e       	mov	r0, r31
 23c:	f8 eb       	ldi	r31, 0xB8	; 184
 23e:	4f 2e       	mov	r4, r31
 240:	55 24       	eor	r5, r5
 242:	53 94       	inc	r5
 244:	f6 e9       	ldi	r31, 0x96	; 150
 246:	6f 2e       	mov	r6, r31
 248:	71 2c       	mov	r7, r1
 24a:	f0 2d       	mov	r31, r0
	note2.freq = 466.16;
	note2.duration = 150;
 24c:	0f 2e       	mov	r0, r31
 24e:	f2 ed       	ldi	r31, 0xD2	; 210
 250:	8f 2e       	mov	r8, r31
 252:	99 24       	eor	r9, r9
 254:	93 94       	inc	r9
 256:	f6 e9       	ldi	r31, 0x96	; 150
 258:	af 2e       	mov	r10, r31
 25a:	b1 2c       	mov	r11, r1
 25c:	f0 2d       	mov	r31, r0
	note3.freq = 493;
	note3.duration = 150;
 25e:	0f 2e       	mov	r0, r31
 260:	fd ee       	ldi	r31, 0xED	; 237
 262:	cf 2e       	mov	r12, r31
 264:	dd 24       	eor	r13, r13
 266:	d3 94       	inc	r13
 268:	f6 e9       	ldi	r31, 0x96	; 150
 26a:	ef 2e       	mov	r14, r31
 26c:	f1 2c       	mov	r15, r1
 26e:	f0 2d       	mov	r31, r0
	note4.freq = 600;
	note4.duration = 150;
	
	// setting up
	setup();
 270:	0e 94 b9 00 	call	0x172	; 0x172 <setup>

	// main logic
    while (1) 
    {	
		play_note(note1);
 274:	c3 01       	movw	r24, r6
 276:	b2 01       	movw	r22, r4
 278:	0e 94 c3 00 	call	0x186	; 0x186 <play_note>
		play_note(note2);
 27c:	c5 01       	movw	r24, r10
 27e:	b4 01       	movw	r22, r8
 280:	0e 94 c3 00 	call	0x186	; 0x186 <play_note>
		play_note(note3);
 284:	c7 01       	movw	r24, r14
 286:	b6 01       	movw	r22, r12
 288:	0e 94 c3 00 	call	0x186	; 0x186 <play_note>
		play_note(note4);
 28c:	68 e5       	ldi	r22, 0x58	; 88
 28e:	72 e0       	ldi	r23, 0x02	; 2
 290:	86 e9       	ldi	r24, 0x96	; 150
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	0e 94 c3 00 	call	0x186	; 0x186 <play_note>
 298:	ed cf       	rjmp	.-38     	; 0x274 <main+0x3a>

0000029a <__divsf3>:
 29a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__divsf3x>
 29e:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_round>
 2a2:	0e 94 42 02 	call	0x484	; 0x484 <__fp_pscB>
 2a6:	58 f0       	brcs	.+22     	; 0x2be <__divsf3+0x24>
 2a8:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_pscA>
 2ac:	40 f0       	brcs	.+16     	; 0x2be <__divsf3+0x24>
 2ae:	29 f4       	brne	.+10     	; 0x2ba <__divsf3+0x20>
 2b0:	5f 3f       	cpi	r21, 0xFF	; 255
 2b2:	29 f0       	breq	.+10     	; 0x2be <__divsf3+0x24>
 2b4:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_inf>
 2b8:	51 11       	cpse	r21, r1
 2ba:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>
 2be:	0c 94 38 02 	jmp	0x470	; 0x470 <__fp_nan>

000002c2 <__divsf3x>:
 2c2:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_split3>
 2c6:	68 f3       	brcs	.-38     	; 0x2a2 <__divsf3+0x8>

000002c8 <__divsf3_pse>:
 2c8:	99 23       	and	r25, r25
 2ca:	b1 f3       	breq	.-20     	; 0x2b8 <__divsf3+0x1e>
 2cc:	55 23       	and	r21, r21
 2ce:	91 f3       	breq	.-28     	; 0x2b4 <__divsf3+0x1a>
 2d0:	95 1b       	sub	r25, r21
 2d2:	55 0b       	sbc	r21, r21
 2d4:	bb 27       	eor	r27, r27
 2d6:	aa 27       	eor	r26, r26
 2d8:	62 17       	cp	r22, r18
 2da:	73 07       	cpc	r23, r19
 2dc:	84 07       	cpc	r24, r20
 2de:	38 f0       	brcs	.+14     	; 0x2ee <__divsf3_pse+0x26>
 2e0:	9f 5f       	subi	r25, 0xFF	; 255
 2e2:	5f 4f       	sbci	r21, 0xFF	; 255
 2e4:	22 0f       	add	r18, r18
 2e6:	33 1f       	adc	r19, r19
 2e8:	44 1f       	adc	r20, r20
 2ea:	aa 1f       	adc	r26, r26
 2ec:	a9 f3       	breq	.-22     	; 0x2d8 <__divsf3_pse+0x10>
 2ee:	35 d0       	rcall	.+106    	; 0x35a <__divsf3_pse+0x92>
 2f0:	0e 2e       	mov	r0, r30
 2f2:	3a f0       	brmi	.+14     	; 0x302 <__divsf3_pse+0x3a>
 2f4:	e0 e8       	ldi	r30, 0x80	; 128
 2f6:	32 d0       	rcall	.+100    	; 0x35c <__divsf3_pse+0x94>
 2f8:	91 50       	subi	r25, 0x01	; 1
 2fa:	50 40       	sbci	r21, 0x00	; 0
 2fc:	e6 95       	lsr	r30
 2fe:	00 1c       	adc	r0, r0
 300:	ca f7       	brpl	.-14     	; 0x2f4 <__divsf3_pse+0x2c>
 302:	2b d0       	rcall	.+86     	; 0x35a <__divsf3_pse+0x92>
 304:	fe 2f       	mov	r31, r30
 306:	29 d0       	rcall	.+82     	; 0x35a <__divsf3_pse+0x92>
 308:	66 0f       	add	r22, r22
 30a:	77 1f       	adc	r23, r23
 30c:	88 1f       	adc	r24, r24
 30e:	bb 1f       	adc	r27, r27
 310:	26 17       	cp	r18, r22
 312:	37 07       	cpc	r19, r23
 314:	48 07       	cpc	r20, r24
 316:	ab 07       	cpc	r26, r27
 318:	b0 e8       	ldi	r27, 0x80	; 128
 31a:	09 f0       	breq	.+2      	; 0x31e <__divsf3_pse+0x56>
 31c:	bb 0b       	sbc	r27, r27
 31e:	80 2d       	mov	r24, r0
 320:	bf 01       	movw	r22, r30
 322:	ff 27       	eor	r31, r31
 324:	93 58       	subi	r25, 0x83	; 131
 326:	5f 4f       	sbci	r21, 0xFF	; 255
 328:	3a f0       	brmi	.+14     	; 0x338 <__divsf3_pse+0x70>
 32a:	9e 3f       	cpi	r25, 0xFE	; 254
 32c:	51 05       	cpc	r21, r1
 32e:	78 f0       	brcs	.+30     	; 0x34e <__divsf3_pse+0x86>
 330:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_inf>
 334:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>
 338:	5f 3f       	cpi	r21, 0xFF	; 255
 33a:	e4 f3       	brlt	.-8      	; 0x334 <__divsf3_pse+0x6c>
 33c:	98 3e       	cpi	r25, 0xE8	; 232
 33e:	d4 f3       	brlt	.-12     	; 0x334 <__divsf3_pse+0x6c>
 340:	86 95       	lsr	r24
 342:	77 95       	ror	r23
 344:	67 95       	ror	r22
 346:	b7 95       	ror	r27
 348:	f7 95       	ror	r31
 34a:	9f 5f       	subi	r25, 0xFF	; 255
 34c:	c9 f7       	brne	.-14     	; 0x340 <__divsf3_pse+0x78>
 34e:	88 0f       	add	r24, r24
 350:	91 1d       	adc	r25, r1
 352:	96 95       	lsr	r25
 354:	87 95       	ror	r24
 356:	97 f9       	bld	r25, 7
 358:	08 95       	ret
 35a:	e1 e0       	ldi	r30, 0x01	; 1
 35c:	66 0f       	add	r22, r22
 35e:	77 1f       	adc	r23, r23
 360:	88 1f       	adc	r24, r24
 362:	bb 1f       	adc	r27, r27
 364:	62 17       	cp	r22, r18
 366:	73 07       	cpc	r23, r19
 368:	84 07       	cpc	r24, r20
 36a:	ba 07       	cpc	r27, r26
 36c:	20 f0       	brcs	.+8      	; 0x376 <__divsf3_pse+0xae>
 36e:	62 1b       	sub	r22, r18
 370:	73 0b       	sbc	r23, r19
 372:	84 0b       	sbc	r24, r20
 374:	ba 0b       	sbc	r27, r26
 376:	ee 1f       	adc	r30, r30
 378:	88 f7       	brcc	.-30     	; 0x35c <__divsf3_pse+0x94>
 37a:	e0 95       	com	r30
 37c:	08 95       	ret

0000037e <__fixsfsi>:
 37e:	0e 94 c6 01 	call	0x38c	; 0x38c <__fixunssfsi>
 382:	68 94       	set
 384:	b1 11       	cpse	r27, r1
 386:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>
 38a:	08 95       	ret

0000038c <__fixunssfsi>:
 38c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_splitA>
 390:	88 f0       	brcs	.+34     	; 0x3b4 <__fixunssfsi+0x28>
 392:	9f 57       	subi	r25, 0x7F	; 127
 394:	98 f0       	brcs	.+38     	; 0x3bc <__fixunssfsi+0x30>
 396:	b9 2f       	mov	r27, r25
 398:	99 27       	eor	r25, r25
 39a:	b7 51       	subi	r27, 0x17	; 23
 39c:	b0 f0       	brcs	.+44     	; 0x3ca <__fixunssfsi+0x3e>
 39e:	e1 f0       	breq	.+56     	; 0x3d8 <__fixunssfsi+0x4c>
 3a0:	66 0f       	add	r22, r22
 3a2:	77 1f       	adc	r23, r23
 3a4:	88 1f       	adc	r24, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	1a f0       	brmi	.+6      	; 0x3b0 <__fixunssfsi+0x24>
 3aa:	ba 95       	dec	r27
 3ac:	c9 f7       	brne	.-14     	; 0x3a0 <__fixunssfsi+0x14>
 3ae:	14 c0       	rjmp	.+40     	; 0x3d8 <__fixunssfsi+0x4c>
 3b0:	b1 30       	cpi	r27, 0x01	; 1
 3b2:	91 f0       	breq	.+36     	; 0x3d8 <__fixunssfsi+0x4c>
 3b4:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fp_zero>
 3b8:	b1 e0       	ldi	r27, 0x01	; 1
 3ba:	08 95       	ret
 3bc:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_zero>
 3c0:	67 2f       	mov	r22, r23
 3c2:	78 2f       	mov	r23, r24
 3c4:	88 27       	eor	r24, r24
 3c6:	b8 5f       	subi	r27, 0xF8	; 248
 3c8:	39 f0       	breq	.+14     	; 0x3d8 <__fixunssfsi+0x4c>
 3ca:	b9 3f       	cpi	r27, 0xF9	; 249
 3cc:	cc f3       	brlt	.-14     	; 0x3c0 <__fixunssfsi+0x34>
 3ce:	86 95       	lsr	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b3 95       	inc	r27
 3d6:	d9 f7       	brne	.-10     	; 0x3ce <__fixunssfsi+0x42>
 3d8:	3e f4       	brtc	.+14     	; 0x3e8 <__fixunssfsi+0x5c>
 3da:	90 95       	com	r25
 3dc:	80 95       	com	r24
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	8f 4f       	sbci	r24, 0xFF	; 255
 3e6:	9f 4f       	sbci	r25, 0xFF	; 255
 3e8:	08 95       	ret

000003ea <__floatunsisf>:
 3ea:	e8 94       	clt
 3ec:	09 c0       	rjmp	.+18     	; 0x400 <__LOCK_REGION_LENGTH__>

000003ee <__floatsisf>:
 3ee:	97 fb       	bst	r25, 7
 3f0:	3e f4       	brtc	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	90 95       	com	r25
 3f4:	80 95       	com	r24
 3f6:	70 95       	com	r23
 3f8:	61 95       	neg	r22
 3fa:	7f 4f       	sbci	r23, 0xFF	; 255
 3fc:	8f 4f       	sbci	r24, 0xFF	; 255
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	99 23       	and	r25, r25
 402:	a9 f0       	breq	.+42     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 404:	f9 2f       	mov	r31, r25
 406:	96 e9       	ldi	r25, 0x96	; 150
 408:	bb 27       	eor	r27, r27
 40a:	93 95       	inc	r25
 40c:	f6 95       	lsr	r31
 40e:	87 95       	ror	r24
 410:	77 95       	ror	r23
 412:	67 95       	ror	r22
 414:	b7 95       	ror	r27
 416:	f1 11       	cpse	r31, r1
 418:	f8 cf       	rjmp	.-16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 41a:	fa f4       	brpl	.+62     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 41c:	bb 0f       	add	r27, r27
 41e:	11 f4       	brne	.+4      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 420:	60 ff       	sbrs	r22, 0
 422:	1b c0       	rjmp	.+54     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 424:	6f 5f       	subi	r22, 0xFF	; 255
 426:	7f 4f       	sbci	r23, 0xFF	; 255
 428:	8f 4f       	sbci	r24, 0xFF	; 255
 42a:	9f 4f       	sbci	r25, 0xFF	; 255
 42c:	16 c0       	rjmp	.+44     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 42e:	88 23       	and	r24, r24
 430:	11 f0       	breq	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 432:	96 e9       	ldi	r25, 0x96	; 150
 434:	11 c0       	rjmp	.+34     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 436:	77 23       	and	r23, r23
 438:	21 f0       	breq	.+8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43a:	9e e8       	ldi	r25, 0x8E	; 142
 43c:	87 2f       	mov	r24, r23
 43e:	76 2f       	mov	r23, r22
 440:	05 c0       	rjmp	.+10     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 442:	66 23       	and	r22, r22
 444:	71 f0       	breq	.+28     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 446:	96 e8       	ldi	r25, 0x86	; 134
 448:	86 2f       	mov	r24, r22
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	60 e0       	ldi	r22, 0x00	; 0
 44e:	2a f0       	brmi	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	9a 95       	dec	r25
 452:	66 0f       	add	r22, r22
 454:	77 1f       	adc	r23, r23
 456:	88 1f       	adc	r24, r24
 458:	da f7       	brpl	.-10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 45a:	88 0f       	add	r24, r24
 45c:	96 95       	lsr	r25
 45e:	87 95       	ror	r24
 460:	97 f9       	bld	r25, 7
 462:	08 95       	ret

00000464 <__fp_inf>:
 464:	97 f9       	bld	r25, 7
 466:	9f 67       	ori	r25, 0x7F	; 127
 468:	80 e8       	ldi	r24, 0x80	; 128
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	60 e0       	ldi	r22, 0x00	; 0
 46e:	08 95       	ret

00000470 <__fp_nan>:
 470:	9f ef       	ldi	r25, 0xFF	; 255
 472:	80 ec       	ldi	r24, 0xC0	; 192
 474:	08 95       	ret

00000476 <__fp_pscA>:
 476:	00 24       	eor	r0, r0
 478:	0a 94       	dec	r0
 47a:	16 16       	cp	r1, r22
 47c:	17 06       	cpc	r1, r23
 47e:	18 06       	cpc	r1, r24
 480:	09 06       	cpc	r0, r25
 482:	08 95       	ret

00000484 <__fp_pscB>:
 484:	00 24       	eor	r0, r0
 486:	0a 94       	dec	r0
 488:	12 16       	cp	r1, r18
 48a:	13 06       	cpc	r1, r19
 48c:	14 06       	cpc	r1, r20
 48e:	05 06       	cpc	r0, r21
 490:	08 95       	ret

00000492 <__fp_round>:
 492:	09 2e       	mov	r0, r25
 494:	03 94       	inc	r0
 496:	00 0c       	add	r0, r0
 498:	11 f4       	brne	.+4      	; 0x49e <__fp_round+0xc>
 49a:	88 23       	and	r24, r24
 49c:	52 f0       	brmi	.+20     	; 0x4b2 <__fp_round+0x20>
 49e:	bb 0f       	add	r27, r27
 4a0:	40 f4       	brcc	.+16     	; 0x4b2 <__fp_round+0x20>
 4a2:	bf 2b       	or	r27, r31
 4a4:	11 f4       	brne	.+4      	; 0x4aa <__fp_round+0x18>
 4a6:	60 ff       	sbrs	r22, 0
 4a8:	04 c0       	rjmp	.+8      	; 0x4b2 <__fp_round+0x20>
 4aa:	6f 5f       	subi	r22, 0xFF	; 255
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	08 95       	ret

000004b4 <__fp_split3>:
 4b4:	57 fd       	sbrc	r21, 7
 4b6:	90 58       	subi	r25, 0x80	; 128
 4b8:	44 0f       	add	r20, r20
 4ba:	55 1f       	adc	r21, r21
 4bc:	59 f0       	breq	.+22     	; 0x4d4 <__fp_splitA+0x10>
 4be:	5f 3f       	cpi	r21, 0xFF	; 255
 4c0:	71 f0       	breq	.+28     	; 0x4de <__fp_splitA+0x1a>
 4c2:	47 95       	ror	r20

000004c4 <__fp_splitA>:
 4c4:	88 0f       	add	r24, r24
 4c6:	97 fb       	bst	r25, 7
 4c8:	99 1f       	adc	r25, r25
 4ca:	61 f0       	breq	.+24     	; 0x4e4 <__fp_splitA+0x20>
 4cc:	9f 3f       	cpi	r25, 0xFF	; 255
 4ce:	79 f0       	breq	.+30     	; 0x4ee <__fp_splitA+0x2a>
 4d0:	87 95       	ror	r24
 4d2:	08 95       	ret
 4d4:	12 16       	cp	r1, r18
 4d6:	13 06       	cpc	r1, r19
 4d8:	14 06       	cpc	r1, r20
 4da:	55 1f       	adc	r21, r21
 4dc:	f2 cf       	rjmp	.-28     	; 0x4c2 <__fp_split3+0xe>
 4de:	46 95       	lsr	r20
 4e0:	f1 df       	rcall	.-30     	; 0x4c4 <__fp_splitA>
 4e2:	08 c0       	rjmp	.+16     	; 0x4f4 <__fp_splitA+0x30>
 4e4:	16 16       	cp	r1, r22
 4e6:	17 06       	cpc	r1, r23
 4e8:	18 06       	cpc	r1, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	f1 cf       	rjmp	.-30     	; 0x4d0 <__fp_splitA+0xc>
 4ee:	86 95       	lsr	r24
 4f0:	71 05       	cpc	r23, r1
 4f2:	61 05       	cpc	r22, r1
 4f4:	08 94       	sec
 4f6:	08 95       	ret

000004f8 <__fp_zero>:
 4f8:	e8 94       	clt

000004fa <__fp_szero>:
 4fa:	bb 27       	eor	r27, r27
 4fc:	66 27       	eor	r22, r22
 4fe:	77 27       	eor	r23, r23
 500:	cb 01       	movw	r24, r22
 502:	97 f9       	bld	r25, 7
 504:	08 95       	ret

00000506 <__mulsf3>:
 506:	0e 94 96 02 	call	0x52c	; 0x52c <__mulsf3x>
 50a:	0c 94 49 02 	jmp	0x492	; 0x492 <__fp_round>
 50e:	0e 94 3b 02 	call	0x476	; 0x476 <__fp_pscA>
 512:	38 f0       	brcs	.+14     	; 0x522 <__mulsf3+0x1c>
 514:	0e 94 42 02 	call	0x484	; 0x484 <__fp_pscB>
 518:	20 f0       	brcs	.+8      	; 0x522 <__mulsf3+0x1c>
 51a:	95 23       	and	r25, r21
 51c:	11 f0       	breq	.+4      	; 0x522 <__mulsf3+0x1c>
 51e:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_inf>
 522:	0c 94 38 02 	jmp	0x470	; 0x470 <__fp_nan>
 526:	11 24       	eor	r1, r1
 528:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>

0000052c <__mulsf3x>:
 52c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_split3>
 530:	70 f3       	brcs	.-36     	; 0x50e <__mulsf3+0x8>

00000532 <__mulsf3_pse>:
 532:	95 9f       	mul	r25, r21
 534:	c1 f3       	breq	.-16     	; 0x526 <__mulsf3+0x20>
 536:	95 0f       	add	r25, r21
 538:	50 e0       	ldi	r21, 0x00	; 0
 53a:	55 1f       	adc	r21, r21
 53c:	62 9f       	mul	r22, r18
 53e:	f0 01       	movw	r30, r0
 540:	72 9f       	mul	r23, r18
 542:	bb 27       	eor	r27, r27
 544:	f0 0d       	add	r31, r0
 546:	b1 1d       	adc	r27, r1
 548:	63 9f       	mul	r22, r19
 54a:	aa 27       	eor	r26, r26
 54c:	f0 0d       	add	r31, r0
 54e:	b1 1d       	adc	r27, r1
 550:	aa 1f       	adc	r26, r26
 552:	64 9f       	mul	r22, r20
 554:	66 27       	eor	r22, r22
 556:	b0 0d       	add	r27, r0
 558:	a1 1d       	adc	r26, r1
 55a:	66 1f       	adc	r22, r22
 55c:	82 9f       	mul	r24, r18
 55e:	22 27       	eor	r18, r18
 560:	b0 0d       	add	r27, r0
 562:	a1 1d       	adc	r26, r1
 564:	62 1f       	adc	r22, r18
 566:	73 9f       	mul	r23, r19
 568:	b0 0d       	add	r27, r0
 56a:	a1 1d       	adc	r26, r1
 56c:	62 1f       	adc	r22, r18
 56e:	83 9f       	mul	r24, r19
 570:	a0 0d       	add	r26, r0
 572:	61 1d       	adc	r22, r1
 574:	22 1f       	adc	r18, r18
 576:	74 9f       	mul	r23, r20
 578:	33 27       	eor	r19, r19
 57a:	a0 0d       	add	r26, r0
 57c:	61 1d       	adc	r22, r1
 57e:	23 1f       	adc	r18, r19
 580:	84 9f       	mul	r24, r20
 582:	60 0d       	add	r22, r0
 584:	21 1d       	adc	r18, r1
 586:	82 2f       	mov	r24, r18
 588:	76 2f       	mov	r23, r22
 58a:	6a 2f       	mov	r22, r26
 58c:	11 24       	eor	r1, r1
 58e:	9f 57       	subi	r25, 0x7F	; 127
 590:	50 40       	sbci	r21, 0x00	; 0
 592:	9a f0       	brmi	.+38     	; 0x5ba <__mulsf3_pse+0x88>
 594:	f1 f0       	breq	.+60     	; 0x5d2 <__mulsf3_pse+0xa0>
 596:	88 23       	and	r24, r24
 598:	4a f0       	brmi	.+18     	; 0x5ac <__mulsf3_pse+0x7a>
 59a:	ee 0f       	add	r30, r30
 59c:	ff 1f       	adc	r31, r31
 59e:	bb 1f       	adc	r27, r27
 5a0:	66 1f       	adc	r22, r22
 5a2:	77 1f       	adc	r23, r23
 5a4:	88 1f       	adc	r24, r24
 5a6:	91 50       	subi	r25, 0x01	; 1
 5a8:	50 40       	sbci	r21, 0x00	; 0
 5aa:	a9 f7       	brne	.-22     	; 0x596 <__mulsf3_pse+0x64>
 5ac:	9e 3f       	cpi	r25, 0xFE	; 254
 5ae:	51 05       	cpc	r21, r1
 5b0:	80 f0       	brcs	.+32     	; 0x5d2 <__mulsf3_pse+0xa0>
 5b2:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_inf>
 5b6:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>
 5ba:	5f 3f       	cpi	r21, 0xFF	; 255
 5bc:	e4 f3       	brlt	.-8      	; 0x5b6 <__mulsf3_pse+0x84>
 5be:	98 3e       	cpi	r25, 0xE8	; 232
 5c0:	d4 f3       	brlt	.-12     	; 0x5b6 <__mulsf3_pse+0x84>
 5c2:	86 95       	lsr	r24
 5c4:	77 95       	ror	r23
 5c6:	67 95       	ror	r22
 5c8:	b7 95       	ror	r27
 5ca:	f7 95       	ror	r31
 5cc:	e7 95       	ror	r30
 5ce:	9f 5f       	subi	r25, 0xFF	; 255
 5d0:	c1 f7       	brne	.-16     	; 0x5c2 <__mulsf3_pse+0x90>
 5d2:	fe 2b       	or	r31, r30
 5d4:	88 0f       	add	r24, r24
 5d6:	91 1d       	adc	r25, r1
 5d8:	96 95       	lsr	r25
 5da:	87 95       	ror	r24
 5dc:	97 f9       	bld	r25, 7
 5de:	08 95       	ret

000005e0 <_exit>:
 5e0:	f8 94       	cli

000005e2 <__stop_program>:
 5e2:	ff cf       	rjmp	.-2      	; 0x5e2 <__stop_program>
